// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using banger.Models;

namespace banger.Migrations
{
    [DbContext(typeof(dbContext))]
    partial class dbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("banger.Models.AddOns", b =>
                {
                    b.Property<string>("Equipment")
                        .ValueGeneratedOnAdd();

                    b.Property<float>("Amount");

                    b.Property<bool>("Availability");

                    b.Property<int>("Quantity");

                    b.HasKey("Equipment");

                    b.ToTable("AddOns");
                });

            modelBuilder.Entity("banger.Models.Bookings", b =>
                {
                    b.Property<int>("BookingID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Amount");

                    b.Property<string>("BookingStatus");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email");

                    b.Property<string>("Equipment");

                    b.Property<string>("LicenseNo")
                        .IsRequired();

                    b.Property<string>("Pic");

                    b.Property<DateTime>("PickUpDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VehicleNo")
                        .IsRequired();

                    b.HasKey("BookingID");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("banger.Models.Users", b =>
                {
                    b.Property<string>("Email")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<int>("Age");

                    b.Property<int>("ContactNumber");

                    b.Property<string>("Gender");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Password");

                    b.Property<string>("Pic");

                    b.Property<string>("Status");

                    b.Property<string>("Type");

                    b.HasKey("Email");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("banger.Models.Vehicle", b =>
                {
                    b.Property<string>("VehicleNo")
                        .ValueGeneratedOnAdd();

                    b.Property<float>("Amount");

                    b.Property<string>("Class");

                    b.Property<int>("Doors");

                    b.Property<string>("Facilities");

                    b.Property<string>("FuelType");

                    b.Property<string>("GearBox");

                    b.Property<string>("Pic");

                    b.Property<bool>("VehicleAvailability");

                    b.Property<string>("VehicleType")
                        .IsRequired();

                    b.HasKey("VehicleNo");

                    b.ToTable("Vehicle");
                });
#pragma warning restore 612, 618
        }
    }
}
